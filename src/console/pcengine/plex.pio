;
; By Robrt Dale Smith (c) 2022
;
;
; Interfacing for a PC Engine controllers
;

.program plex

clr:
    set   y, 3     ; count 4-player output 4 bytes from output_word_0
    pull  block	   ; wait and pull output_word_1
    mov   x, osr   ; hold output_word_1 until osr is empty
    pull  block    ; pull output_word_0
    wait  0 pin 1  ; wait for clr go low to start player 1

sel:
    wait  1 pin 0  ; wait for SEL high
    out   PINS, 4  ; output dpad | x/y nybbles

    wait  irq 7    ; wait for SEL low or CLR high
    jmp   PIN, clr ; clear to player 1 if CLR high

    out   PINS, 4  ; output buttons
    jmp   y--, sel ; output next player byte

    mov   osr, x   ; swap output_word_1 into osr for player 5
    set   x, 0     ; drop output_word_1 from x stratch register
    set   y, 1     ; continue sel cycles
    jmp   sel      ; output player 5

% c-sdk {
static inline void plex_program_init(PIO pio, uint sm, uint offset, uint inpin, uint jmppin, uint outpin) {
    pio_sm_config c = plex_program_get_default_config(offset);

    // Connect these GPIOs to this PIO block
    pio_gpio_init(pio, inpin);
    pio_gpio_init(pio, jmppin);

    pio_gpio_init(pio, outpin);
    pio_gpio_init(pio, outpin + 1);
    pio_gpio_init(pio, outpin + 2);
    pio_gpio_init(pio, outpin + 3);

    // No need to set INPINs; we need a JMP pin though

    // Set the JMP pin to the provided `jmppin` parameter.
    sm_config_set_jmp_pin (&c, jmppin);

    // Set the OUT pin to the provided `outpin` parameter. This is where the data is sent out
    sm_config_set_out_pins(&c, outpin, 4);

    // Set the pin directions to output at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, outpin, 4, true);

    sm_config_set_in_pins(&c, inpin);

    // Set the pin directions to input at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, inpin, 2, false);

    sm_config_set_out_shift(
        &c,
        true,  // Shift-to-right = true
        false, // Autopull disabled
        31     // Autopull threshold = 31
    );

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX); // Not using RX FIFO so double TX FIFO length

    // Load our configuration, and start the program from the beginning
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
